// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
  IN in[16], load, address[14];
  OUT out[16];

  PARTS:
  DMux8Way(in=load, sel[0..1]=address[0..1],
           a=in0, b=in1, c=in2, d=in3);

  RAM4K(in=in, load=in0, address=address[2..13], out=ram0);
  RAM4K(in=in, load=in1, address=address[2..13], out=ram1);
  RAM4K(in=in, load=in2, address=address[2..13], out=ram2);
  RAM4K(in=in, load=in3, address=address[2..13], out=ram3);

  Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3,
            sel[0..1]=address[0..1], out=out);
}
