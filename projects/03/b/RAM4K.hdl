// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
  IN in[16], load, address[12];
  OUT out[16];

  PARTS:
  DMux8Way(in=load, sel=address[0..2],
           a=in0, b=in1, c=in2, d=in3, e=in4, f=in5, g=in6, h=in7);

  RAM512(in=in, load=in0, address=address[3..11], out=ram0);
  RAM512(in=in, load=in1, address=address[3..11], out=ram1);
  RAM512(in=in, load=in2, address=address[3..11], out=ram2);
  RAM512(in=in, load=in3, address=address[3..11], out=ram3);
  RAM512(in=in, load=in4, address=address[3..11], out=ram4);
  RAM512(in=in, load=in5, address=address[3..11], out=ram5);
  RAM512(in=in, load=in6, address=address[3..11], out=ram6);
  RAM512(in=in, load=in7, address=address[3..11], out=ram7);

  Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7,
            sel=address[0..2], out=out);
}
